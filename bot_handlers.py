import logging
from datetime import datetime
import asyncio
from telegram import Update, ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler
import states
from avito_parser import check_ad_exists, parse_ads, find_ad_position, get_region_name, fetch_avito_page
from bot_config import REGIONS, get_region_keyboard, MAX_QUERIES, REQUEST_DELAY

logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è
SET_AD_ID = states.SET_AD_ID
CHOOSE_REGION = states.CHOOSE_REGION
AWAIT_QUERIES = states.AWAIT_QUERIES


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    help_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø AvitoPositionProbe ü§ñ\n\n"
        "–Ø –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é –ø–æ–∑–∏—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ –ê–≤–∏—Ç–æ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö\n\n"
        "üìå –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
        "1. –£—Å—Ç–∞–Ω–æ–≤–∏ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è: /set_ad_id\n"
        "2. –í—ã–±–µ—Ä–∏ —Ä–µ–≥–∏–æ–Ω –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è\n"
        "3. –ó–∞–ø—É—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É: /check\n"
        "4. –í–≤–µ–¥–∏ –∫–ª—é—á–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã (–∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏)\n\n"
        "‚ÑπÔ∏è –¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏–æ–Ω –∫–æ–º–∞–Ω–¥–æ–π /change_region"
    )
    await update.message.reply_text(help_text, parse_mode="HTML")
    return ConversationHandler.END


async def set_ad_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞–ª–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è"""
    await update.message.reply_text(
        "üî¢ –í–≤–µ–¥–∏—Ç–µ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è:\n"
        "‚Ä¢ –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é, –≤–≤–µ–¥–∏—Ç–µ /cancel\n\n"
        "–ö–∞–∫ –Ω–∞–π—Ç–∏ ID:\n"
        "1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ Avito\n"
        "2. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ü–∏—Ñ—Ä—ã –≤ –∫–æ–Ω—Ü–µ URL –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–ª–µ—à–∞\n"
        "–ü—Ä–∏–º–µ—Ä: https://www.avito.ru/.../2140172843 ‚Üí ID = 2140172843"
    )
    return SET_AD_ID


async def receive_ad_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è"""
    text = update.message.text.strip()

    if text.isdigit() and len(text) >= 5:
        if check_ad_exists(text):
            context.user_data['ad_id'] = text
            await update.message.reply_text(f"‚úÖ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {text}")
            return await choose_location(update, context)
        else:
            await update.message.reply_text("‚ùå –û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π ID –∏–ª–∏ /cancel")
            return SET_AD_ID
    else:
        await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID! –í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã (–º–∏–Ω–∏–º—É–º 5) –∏–ª–∏ /cancel")
        return SET_AD_ID


async def choose_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏"""
    await update.message.reply_text(
        "üìç –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π:",
        reply_markup=get_region_keyboard()
    )
    return CHOOSE_REGION


async def handle_region_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞"""
    choice = update.message.text

    if choice in REGIONS:
        region_code = REGIONS[choice]

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã
        if region_code == "both":
            context.user_data['regions'] = [
                "sankt-peterburg",
                "sankt_peterburg_i_lo"
            ]
        else:
            context.user_data['regions'] = [region_code]

        await update.message.reply_text(
            f"‚úÖ –†–µ–≥–∏–æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {choice}\n"
            f"–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–º–∞–Ω–¥–æ–π /check",
            reply_markup=ReplyKeyboardRemove()
        )
        return ConversationHandler.END
    else:
        await update.message.reply_text(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤",
            reply_markup=ReplyKeyboardRemove()
        )
        return await choose_location(update, context)


async def change_region(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–≥–∏–æ–Ω"""
    if 'ad_id' not in context.user_data:
        await update.message.reply_text("‚ùå –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–æ–π /set_ad_id")
        return ConversationHandler.END

    return await choose_location(update, context)


async def check(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–π"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    if 'ad_id' not in context.user_data:
        await update.message.reply_text("‚ùå –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–æ–π /set_ad_id")
        return ConversationHandler.END

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞
    if 'regions' not in context.user_data:
        await update.message.reply_text("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –∫–æ–º–∞–Ω–¥–æ–π /set_ad_id")
        return ConversationHandler.END

    await update.message.reply_text(
        "üìù –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ (–∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):\n"
        f"‚Ä¢ –ú–∞–∫—Å–∏–º—É–º {MAX_QUERIES} –∑–∞–ø—Ä–æ—Å–æ–≤\n"
        "‚Ä¢ –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é, –≤–≤–µ–¥–∏—Ç–µ /cancel\n\n"
        "–ü—Ä–∏–º–µ—Ä:\n"
        "<code>–º–∞–∫–∏—è–∂ –∏ –ø—Ä–∏—á–µ—Å–∫–∞\n–≤–∏–∑–∞–∂–∏—Å—Ç —Å –≤—ã–µ–∑–¥–æ–º</code>",
        parse_mode="HTML"
    )
    return AWAIT_QUERIES


async def receive_queries(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã"""
    text = update.message.text.strip()
    queries = [q.strip() for q in text.split('\n') if q.strip()]

    if not queries:
        await update.message.reply_text("‚ùå –ù–µ –ø–æ–ª—É—á–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ /cancel")
        return AWAIT_QUERIES

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å—ã
    context.user_data['queries'] = queries[:MAX_QUERIES]

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
    await process_queries(update, context)
    return ConversationHandler.END


async def process_queries(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–∑–∏—Ü–∏–π"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        target_id = context.user_data['ad_id']
        regions = context.user_data['regions']
        queries = context.user_data['queries']

        results = []
        total_checks = len(queries) * len(regions)
        current_check = 0

        for query in queries:
            query_results = []

            for region in regions:
                current_check += 1
                region_name = get_region_name(region)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                status_msg = await update.message.reply_text(
                    f"üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ {current_check}/{total_checks}\n"
                    f"‚Ä¢ –ó–∞–ø—Ä–æ—Å: {query}\n"
                    f"‚Ä¢ –†–µ–≥–∏–æ–Ω: {region_name}\n"
                    f"‚è± –û–∂–∏–¥–∞–π—Ç–µ..."
                )

                # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
                html = fetch_avito_page(query, region)

                if not html:
                    query_results.append(f"‚ùå {region_name}: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏")
                    continue

                # –ü–∞—Ä—Å–∏–º –∏ –∏—â–µ–º –ø–æ–∑–∏—Ü–∏—é
                ads = parse_ads(html)
                position = find_ad_position(ads, target_id)
                check_time = datetime.now().strftime('%H:%M:%S')

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                result = f"‚Ä¢ {region_name}: –ø–æ–∑–∏—Ü–∏—è {position} ({check_time})"
                query_results.append(result)

                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                await context.bot.delete_message(
                    chat_id=update.effective_chat.id,
                    message_id=status_msg.message_id
                )

                # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                await asyncio.sleep(REQUEST_DELAY)

            results.append(f"üîπ *{query}*\n" + "\n".join(query_results))

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á—ë—Ç
        report = "\n\n".join(results)
        final_report = (
            f"üìä *–û—Ç—á–µ—Ç –ø–æ –ø–æ–∑–∏—Ü–∏—è–º*\n\n{report}\n\n"
            f"üÜî *ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è:* `{target_id}`"
        )
        await update.message.reply_text(final_report, parse_mode="Markdown")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤: {e}", exc_info=True)
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é"""
    await update.message.reply_text(
        "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END


async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏"""
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}", exc_info=True)
    if isinstance(update, Update) and update.effective_message:
        await update.effective_message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    return ConversationHandler.END


# –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏–º–ø–æ—Ä—Ç–∞
__all__ = [
    'start',
    'set_ad_id',
    'receive_ad_id',
    'choose_location',
    'handle_region_choice',
    'change_region',
    'check',
    'receive_queries',
    'process_queries',
    'cancel',
    'error_handler'
]